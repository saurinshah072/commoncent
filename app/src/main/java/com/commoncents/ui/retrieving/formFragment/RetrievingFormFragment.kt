package com.commoncents.ui.retrieving.formFragment

import android.Manifest
import android.content.Context
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.navigation.NavController
import androidx.navigation.fragment.findNavController
import com.commoncents.R
import com.commoncents.core.BaseFragment
import com.commoncents.databinding.FragmentRetrievingFormBinding
import com.commoncents.ui.dashboard.DashboardActivity
import com.commoncents.ui.retrieving.quickScanFragment.RetrievingFragment
import com.commoncents.utils.Utility
import com.gun0912.tedpermission.PermissionListener
import com.gun0912.tedpermission.TedPermission

class RetrievingFormFragment  : BaseFragment(), View.OnClickListener  {
    //
    lateinit var binding: FragmentRetrievingFormBinding
    private lateinit var activity: DashboardActivity
    private val navigation: NavController by lazy {
        findNavController()
    }
    //
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        binding = FragmentRetrievingFormBinding.inflate(inflater, container, false)
        activity.hideUnHideUnKnowPO(false)
        initView()
        setListeners()
        return binding.root
    }

    override fun onAttach(context: Context) {
        super.onAttach(context)
        activity = context as DashboardActivity
    }
    private fun initView() {

    }
    private fun setListeners() {
        binding.fragmentFormAddCaseUpc.setOnClickListener(this)
        binding.fragmentFormAddSleeveUpc.setOnClickListener(this)
    }
    companion object {
        /**
         * Use this factory method to create a new instance of
         * this fragment using the provided parameters.
         *
         * @return A new instance of fragment MyaccountFragment.
         */
        // TODO: Rename and change types and number of parameters
        @JvmStatic
        fun newInstance() =
            RetrievingFragment().apply {}
    }
    override fun onClick(p0: View?) {
        when (p0!!.id) {
            R.id.fragment_form_add_case_upc -> {
                binding.fragmentFormAddCaseUpcView.visibility = View.VISIBLE
            }
            R.id.fragment_form_add_sleeve_upc -> {
                binding.fragmentFormAddSleeveUpcView.visibility = View.VISIBLE
            }
        }
    }

    private fun checkCameraPermission(myView: View?) {
        val permissionListener: PermissionListener = object : PermissionListener {
            override fun onPermissionGranted() {
                Utility.hideKeyboard(context!!, myView!!)
                /**
                 * clear the search text
                 */
                //clearSearch()
                navigation.navigate(R.id.action_qrcode)
            }

            override fun onPermissionDenied(deniedPermissions: List<String>) {
                // This is autogenerated method
            }
        }
        TedPermission.with(context).setPermissionListener(permissionListener)
            .setDeniedMessage(getString(R.string.permission_denied))
            .setPermissions(Manifest.permission.CAMERA, Manifest.permission.CAMERA).check()
    }
}